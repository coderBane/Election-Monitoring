@page "/presidential-candidates"

@using Election2023.ServerApp.Pages.Presidential.Components
@using Election2023.Application.Features.Candidates.Queries
@inject ISender Mediator
@inject NavigationManager Navigator

<PageTitle>Candidates - 2023 Presidential Race</PageTitle>

<div class="container-md text-center">
    @if (topCandidates.Any())
    {
        <h1>Top Presidential Candidates</h1>
        <br/>
        <div style="margin: -20px auto 50px; color: rgb(67, 64, 64); font-weight: 400; font-size: 15px;">
            See leading Presidential Candidates, explore their key statements and also review their policy documents
        </div>
        <CandidateCard dataSource="topCandidates" />
        <hr size="6" width="100%" color="SlateGray" class="my-5"/>
    }
    <h1>Presidential Candidates</h1>
    <br/>
    <div style="margin: -20px auto 50px; color: rgb(67, 64, 64); font-weight: 400; font-size: 15px;">
        See Presidential Candidates, explore their profiles
    </div>
    @if (otherCandidates.Any())
    {
        <CandidateCard dataSource="otherCandidates" />
    }
</div>

@code{
    private CandidateSummaryVM[] topCandidates = Array.Empty<CandidateSummaryVM>();
    private CandidateSummaryVM[] otherCandidates = Array.Empty<CandidateSummaryVM>();

    protected async override Task OnInitializedAsync()
    {
        var result = await Mediator.Send(new GetAllCandidatesQuery(category: 1));
        if (result is not null && result.Success)
            if (result.Data is not null)
            {
                topCandidates = result.Data.Where(x => x.OneToWatch).ToArray();
                otherCandidates = result.Data.Where(x => !x.OneToWatch).ToArray();
            }
    }
}